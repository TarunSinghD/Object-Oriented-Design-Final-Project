/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.6
 * Generated at: 2018-04-20 19:15:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.JSP;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import com.leave.model.*;
import java.util.*;

public final class DeleteLeaveApplication_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.leave.model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("     \r\n");
      out.write("     \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("Leave Records\r\n");
      out.write(" <TABLE BORDER=\"1\">\r\n");
      out.write("                <TR>\r\n");
      out.write("                    <TH>employeeID</TH>\r\n");
      out.write("                    <TH>applicationID</TH>\r\n");
      out.write("                    <TH>startDate</TH>\r\n");
      out.write("                    <TH>endDate</TH>\r\n");
      out.write("                    <TH>leaveType</TH>\r\n");
      out.write("                    <TH>noOfDays</TH>\r\n");
      out.write("                    <TH>status</TH>\r\n");
      out.write("                </TR>\r\n");

	Employee emp = (Employee)session.getAttribute("Employee");
                String applicationID = request.getParameter("applicationID");
            	if (applicationID != null)
            	{
            		int appID =  Integer.parseInt(request.getParameter("applicationID"));
            		session.setAttribute("Employee", emp);
            		if(emp.cancelLeave(appID))
            			response.sendRedirect("/LeaveManagement/JSP/DeleteAppSuccess.jsp");
            		else
            			response.sendRedirect("/LeaveManagement/JSP/DeleteAppFailure.jsp");
            	}
                
    if (emp == null)
    {
    	System.out.println("Emp is null");
    }
                
    ArrayList<LeaveApplication> empLeaveReq = new ArrayList<LeaveApplication>();
    empLeaveReq = emp.viewApplications();
    
    if (empLeaveReq == null)
    {
    	System.out.println("Emp Leave Request is null");
    }
	
	for(LeaveApplication l: empLeaveReq)
	{

      out.write("\r\n");
      out.write("\r\n");
      out.write("                <TR>\r\n");
      out.write("                    <TD> ");
      out.print(l.getEmployeeID()  );
      out.write(" </TD>\r\n");
      out.write("                    <TD> ");
      out.print( l.getApplicationID() );
      out.write(" </TD>\r\n");
      out.write("                     <TD> ");
      out.print( l.getStartDate() );
      out.write(" </TD>\r\n");
      out.write("                      <TD> ");
      out.print( l.getEndDate() );
      out.write(" </TD>\r\n");
      out.write("                      <TD> ");
      out.print( l.getLeaveType() );
      out.write(" </TD>\r\n");
      out.write("                      <TD> ");
      out.print( l.getNoOfDays() );
      out.write(" </TD>\r\n");
      out.write("                      <TD> ");
      out.print( l.getApplicationStatus() );
      out.write(" </TD>\r\n");
      out.write("                </TR>\r\n");
      out.write("            \r\n");
      out.write("            ");

	}
            
      out.write("\r\n");
      out.write("            </TABLE>\r\n");
      out.write("            <form method = \"post\" action = \"#\">\r\n");
      out.write("Application ID <input type = \"text\" name = \"applicationID\">\r\n");
      out.write("\r\n");
      out.write("<button type=\"submit\">Submit</button>\r\n");
      out.write("            \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
